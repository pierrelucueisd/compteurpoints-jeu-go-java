@startuml

class Player{
- color: PlayerColor
- stones: ArrayList<Chain>
+ playStone(s: Stone)
+ pass()
}
class Board{
- size: int
+ new(d: int, i: Intersection[])
+ isNeighbor(Intersections)
+ calculateLiberties(Chain c)
+ atariRule()
+ koRule()
+ suicideRule()
}

class BoardController{
- logs: ArrayList<Turn>
+ startGame()
+ updateBoard()
+ endGame()
+ validateAction(a: Action)
+ getLastAction()
+ removePrisoners()
+ calculateScore()
+ logAction(a:Action)
+ getLogs()

}

class Action{
- actionType: ActionType
}

class Chain{
- stones: ArrayList<Stone>
- owner: Player
}

class Stone{
- liberties: int
- position: Intersection
+ isDead()
}

class Intersection{
- vacancy: bool
- line: int
- column: int
+ isVacant()
}

enum ActionType{
PLAY
PASS
}

enum PlayerColor{
BLACK
WHITE
}




Board --* Intersection
Stone -- Intersection
Player -- Board
Chain --* Stone
Player --* Chain
BoardController -- Action
BoardController --"2" Player
Player -- Action
Intersection --"9" Line
Intersection --"9" Column

@enduml

