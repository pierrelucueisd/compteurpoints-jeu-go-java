@startuml

class Player{
- name: PlayerColor
- prisoners: ArrayList<Stone>
- stones: ArrayList<Chain>
+ playStone(s: Stone)
+ pass()
}
class Board{
- dimension: int
+ new(d: int, i: Intersection[])
+ howManyNeighbor()
+ isNeighbor(Intersection)
}

class BoardController{
- logs: ArrayList<Turn>
+ createBoard()
+ deleteBoard()
+ validateAction(a: Action)
+ updateBoard()
+ calculateScore()
+ logAction(a:Action)
+ getLogs()

}

class Action{
- actionType: ActionType
}

class Chain{
- stones: ArrayList<Stone>
+ getLiberties()
+ atariState()
}


class Stone{
- liberties: int
- position: Intersection
+ isDead()
}
class Intersection{
- occupation: bool
- line: Line
- column: Column
}

enum ActionType{
PLAY
PASS
}

enum PlayerColor{
BLACK
WHITE
}

enum Column{}

enum Line{}


Board --* Intersection
Stone -- Intersection
Player -- Board
Chain --* Stone
Player --* Chain
BoardController -- Action
BoardController --"2" Player
Player -- Action
Intersection --"9" Line
Intersection --"9" Column

@enduml

