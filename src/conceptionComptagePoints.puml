@startuml



class ConnectedIntersectionsFetcher {
    +ConnectedIntersectionsFetcher(List<Optional<Color>>)
    +fetchFromList(List<Intersections>): List<Intersection>
}



Interface EncircledAreaInterface {
    +accept(Visitor v)
}
class EncirclingArea{
  -color
  -List<Intersection> borderConectedStones
  -List<Intersection> encircledIntersections
}

EncircledAreaInterface <-- EncirclingArea
EncircledAreaInterface --o EncirclingArea


class EncicrlingAreaFetcher{
    +EncicrlingAreaFetcher(\n\t Color color, \n\t List<intersections> liste, \n\t)
    +fetch(): EncircledAreaInterface

}
EncicrlingAreaFetcher .. ConnectedIntersectionsFetcher
EncicrlingAreaFetcher .. BorderFetcher

class BorderFetcher {
    +BordeFetcher(\n\tColor c, \n\tList<Intersection> contexte, \n\tList<Intersection>
     )
     +fetch() : List<Intersection>
}

EncicrlingAreaFetcher . EncircledAreaInterface

interface Visitor {
    +visit(EncircledAreaInterface)
}
class MemberpointCalculatorVisitor
interface MemberpointCalculatorVisitorInterface
MemberpointCalculatorVisitorInterface <|-- MemberpointCalculatorVisitor
Visitor <|- MemberpointCalculatorVisitorInterface
EncircledAreaInterface . Visitor

class PointCalculator {
    +PointCalculator(\n\t int maxTeritorySize, \n\t EncircledAreaInterface encircledRoot \n)
    +CalculatePlayerPoint(Player p) : int
}
PointCalculator .. MemberpointCalculatorVisitorInterface
PointCalculator .. EncicrlingAreaFetcher


@enduml