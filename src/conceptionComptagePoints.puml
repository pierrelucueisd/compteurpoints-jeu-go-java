@startuml


class PlayerPointsCalculator {
    +PlayerPointsCalculator(\n\t int maxTeritorySize, \n\t EncircledAreaInterface encircledRoot \n)
    +CalculatePlayerPoint(Player p) : int
}
PlayerPointsCalculator .. CalculatePlayerPointsVisitorInterface
PlayerPointsCalculator .. EncircledAreaInterface

interface CalculatePlayerPointsVisitorInterface {
    +getReachedIntersections(): List<Intersections>
    +getPoints(): int
}
CalculatePlayerPointsVisitorInterface <|-- CalculatePlayerPointVisitor

interface Visitor {
    +visit(EncircledAreaInterface)
}
Visitor <|- CalculatePlayerPointsVisitorInterface
EncircledAreaInterface . Visitor


Interface EncircledAreaInterface {
    +accept(Visitor v)
    +getColor(): Optional<color>
    +getBorderConnectedStones() : Optional<List<Intersections>>
    +getDirectContent() : List<intersections>
    +getContentAndSubContent() : List<intersections>
    +getSubEncircledArea() : List<EncircledAreaInterface>=
    + static getDifference (\n\t List<Intersection> fullContent, \n\t EncircledAreaInterface subArea\n): List<Intersectionnteresection>
    + addChildrenEncircledArea(EncircledAreaInterface)
}
class EncircledArea{
  -List<Intersection> borderConnectedStones
  -List<Intersection> directContent
  -List<EncircledAreaInterface> subAreas
}

EncircledAreaInterface <-- EncircledArea
EncircledAreaInterface --o EncircledArea


class EncircledAreaFetcher{
    +EncircledAreaFetcher(\n\t List<intersections> liste, \n)
    +fetch(): List<EncircledAreaInterface>
    -fetchFromIntersection(\n\t Color color, \n\t Intersection, \n\t List<Intersection> contexte \n): EncircledAreaInterface
    -getParentAreaWithStickingBorder(\n): Optional<EncircledAreaInterface>
    -getSurroundedByColorStoperAdjacency(\n\t Color c, \n\t Intersection i \n) : List<Intersection>
    -getExternalBorder(List<Intersection> contenu) : List<Intersection>
    -extendsBorder(\n\t List<Intersection> toutLeContenu, \n\t List<Intersection> bordure\n) : List<Intersection>
}
EncircledAreaFetcher . EncircledAreaInterface

class EncircleAreaStructurator {
    EncircleAreaStructurator(\n\t List<EncircledAreaInterface> \n)
    -isEncircledAreaIsIn(EncircledAreaInterface)
    -minLeftBorderDistanceBetween(EncircledAreaInterface, EncircledAreaInterface)
    -findDirectParent(EncircledAreaInterface, List<EncircledAreaInterface>): Optional<EncircledAreaInterface>
    +structurate(): EncircledAreaInterface
}
EncircledAreaFetcher .. ExternalBorderFetcher
class ExternalBorderFetcher {
    +ExternalBorderFetcher(List<Intersection> contenu)
    +fetch(): List<Intersection>
    -getMinHorizontalPosition() : int
    -getMaxPorizontalPosition(): int
    -getMinHeightPosition(): int
    -getMaxHeightPosition(): int
    -getBorderLeftPosAtPos(int): int
    -getBorderRightPosAtPos(int): int
    -getBorderBottomPosAtPos(int): int
    -getBorderTopPosAtPos(int): int
}

EncircleAreaStructurator .. EncircledAreaFetcher
EncircleAreaStructurator .. EncircledAreaInterface

@enduml